@model Lib.ViewModels.CreateKPIVM
@{
    ViewBag.Title = "CreateKPI";
}

<h2>Create KPI</h2>

@using (Html.BeginForm("CreateKPI", "KPI", FormMethod.Post))
{
    <div>
        <div>
            <div>
                @Html.LabelFor(m => m.Project, new { @class = "LabelFormat" })
                @Html.DropDownListFor(m => m.Project.ProjectID, new SelectList(Model.ProjectList, "ProjectID", "ProjectName", new { id = "dropdown" }), "---Select---")
                <font color="ff0000">@Html.ValidationMessageFor(m => m.Project)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.Sprint, new { @class = "LabelFormat" })
                @Html.DropDownListFor(m => m.Sprint.SprintID, new SelectList(Model.SprintList, "SprintID", "SprintName", new { id = "dropdown" }), "---Select---")
                <font color="ff0000">@Html.ValidationMessageFor(m => m.Sprint)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.Story, new { @class = "LabelFormat" })
                @Html.DropDownListFor(m => m.Story.StoryID, new SelectList(Model.StoryList, "StoryID", "StoryName", new { id = "dropdown" }), "---Select---")
                <font color="ff0000">@Html.ValidationMessageFor(m => m.Story)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.Title, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.Title)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.Points, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.Points, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.Points)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TCCreated, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TCCreated, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TCCreated)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TCExcuted, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TCExcuted, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TCExcuted)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TCFailed, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TCFailed, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TCFailed)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TCPassed, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TCPassed, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TCPassed)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.DefectsFound, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.DefectsFound, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.DefectsFound)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.DefectsFixed, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.DefectsFixed, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.DefectsFixed)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.DefectsRejected, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.DefectsRejected, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.DefectsRejected)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.DefectsDeferred, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.DefectsDeferred, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.DefectsDeferred)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.CriticalDefects, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.CriticalDefects, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.CriticalDefects)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TestHrsPlanned, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TestHrsPlanned, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TestHrsPlanned)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TestHrsActual, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TestHrsActual, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TestHrsActual)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.BugsFoundProduction, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.BugsFoundProduction, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.BugsFoundProduction)</font>
            </div>
            <div>
                @Html.LabelFor(m => m.TotalHrsFixingBugs, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.TotalHrsFixingBugs, new { @class = "form-control TextBoxFormat" })
                <font>@Html.ValidationMessageFor(m => m.TotalHrsFixingBugs)</font>
            </div>
            @Html.HiddenFor(m => m.CreatedBy, new { @Value = Session["Name"] })
            @Html.HiddenFor(m => m.ModifiedBy, new { @Value = Session["Name"] })
            @Html.HiddenFor(m => m.Created, new { @Value = DateTime.Now })
            @Html.HiddenFor(m => m.Modified, new { @Value = DateTime.Now })
            <input type="submit" value="Submit" />
        </div>
    </div>
}