@model Lib.ViewModels.CreateKPIVM
@{
    ViewBag.Title = "UpdateKPI";
}

<h2>Update KPI</h2>

@using (Html.BeginForm("UpdateKPI", "KPI", FormMethod.Post))
{
    <div>
        <div>
            <table>
                <tr><th>Key Performance Index</th><th>@Html.DisplayName(TempData["Date"].ToString().Split(' ')[0])</th><th>Test Cases</th><th></th><th>Defects</th><th></th><th>Testing &amp; Bugs</th><th></th></tr>
                <tr>
                    <td>@Html.LabelFor(m => m.Assignment, new { @class = "LabelFormat" })</td>
                    <td>@Html.DropDownListFor(m => m.AssignmentID, new SelectList(Model.AssignmentList.Distinct(), "AssignmentID", "Title", new { id = "dropdown" }), "---Select---")</td>
                    <td>@Html.LabelFor(m => m.TCCreated, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TCCreated, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.DefectsFound, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.DefectsFound, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.TestHrsPlanned, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TestHrsPlanned, new { @class = "form-control TextBoxFormat" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.Project, new { @class = "LabelFormat" })</td>
                    <td>@Html.DropDownListFor(m => m.ProjectID, new SelectList(Model.ProjectList, "ProjectID", "ProjectName", new { id = "dropdown" }), "---Select---")</td>
                    <td>@Html.LabelFor(m => m.TCExcuted, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TCExcuted, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.DefectsFixed, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.DefectsFixed, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.TestHrsActual, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TestHrsActual, new { @class = "form-control TextBoxFormat" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.Sprint, new { @class = "LabelFormat" })</td>
                    <td>@Html.DropDownListFor(m => m.SprintID, new SelectList(Model.SprintList, "SprintID", "SprintName", new { id = "dropdown" }), "---Select---")</td>
                    <td>@Html.LabelFor(m => m.TCFailed, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TCFailed, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.DefectsRejected, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.DefectsRejected, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.BugsFoundProduction, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.BugsFoundProduction, new { @class = "form-control TextBoxFormat" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.Story, new { @class = "LabelFormat" })</td>
                    <td>@Html.DropDownListFor(m => m.StoryID, new SelectList(Model.StoryList, "StoryID", "StoryName", new { id = "dropdown" }), "---Select---")</td>
                    <td>@Html.LabelFor(m => m.TCPassed, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TCPassed, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.DefectsDeferred, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.DefectsDeferred, new { @class = "form-control TextBoxFormat" })</td>
                    <td>@Html.LabelFor(m => m.TotalHrsFixingBugs, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.TotalHrsFixingBugs, new { @class = "form-control TextBoxFormat" })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.Points, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.Points, new { @class = "form-control TextBoxFormat" })</td>
                    <td></td>
                    <td></td>
                    <td>@Html.LabelFor(m => m.CriticalDefects, new { @class = "LabelFormat" })</td>
                    <td>@Html.TextBoxFor(m => m.CriticalDefects, new { @class = "form-control TextBoxFormat" })</td>
                    <td></td>
                    <td></td>
                </tr>
            </table>
            @Html.HiddenFor(m => m.CreatedBy, new { @Value = Session["Name"] })
            @Html.HiddenFor(m => m.ModifiedBy, new { @Value = Session["Name"] })
            @Html.HiddenFor(m => m.Created, new { @Value = (DateTime)TempData["Date"] })
            @Html.HiddenFor(m => m.Modified, new { @Value = DateTime.Now })
            <input type="submit" value="Submit" />
        </div>
    </div>
}