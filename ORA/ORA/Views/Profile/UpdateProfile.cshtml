@model Lib.ViewModels.CreateProfileVM
@{
    ViewBag.Title = "UpdateProfile";
}

<h2>UpdateProfile</h2>

@using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post))
{
    <div>
        <div>
            @Html.LabelFor(m => m.FirstName, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.FirstName)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.LastName, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.LastName)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.Position, new { @class = "LableFormat" })
            @Html.DropDownListFor(m => m.PositionID, new SelectList(Model.PositionList, "PositionID", "Title", new { @id = "dropdown" }))
            <font color="">@Html.ValidationMessageFor(m => m.Position)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.Country, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.Country, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.Country)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.Zip, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.Zip, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.Zip)</font>
        </div>
        @*<div>
            @Html.LabelFor(m => m.Education, new { @class = "LableFormat" })
            @Html.DropDownListFor(m => m.EducationID, new SelectList(Model.EducationList, "EducationID", "EducationName", new { @id = "dropdown" }))
            <font color="">@Html.ValidationMessageFor(m => m.EducationList)</font>
        </div>*@
        <div>
            @Html.LabelFor(m => m.Education, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.NewEducation, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.EducationList)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.Industry, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.Industry, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.Industry)</font>
        </div>
        <div>
            @Html.LabelFor(m => m.Summary, new { @class = "LableFormat" })
            @Html.TextBoxFor(m => m.Summary, new { @class = "form-control TextboxFormat" })
            <font color="">@Html.ValidationMessageFor(m => m.Summary)</font>
        </div>
        @Html.HiddenFor(m => m.ProfileID,new { @Value = Model.ProfileID })
        <input type="submit" value="Update" />
    </div>
}